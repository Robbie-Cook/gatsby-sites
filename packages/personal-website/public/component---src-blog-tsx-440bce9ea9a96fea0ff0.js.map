{"version":3,"sources":["webpack:///./src/blog.tsx","webpack:///./node_modules/facepaint/dist/index.es.js"],"names":["mq","facepaint","pageQuery","MyBlog","props","posts","data","allMarkdownRemark","edges","forEach","edge","node","frontmatter","publish","push","title","date","content","dangerouslySetInnerHTML","__html","excerpt","author","link","fields","slug","sort","a","b","date1","Date","getTime","date2","css","padding","site","siteMetadata","breakpoints","_ref","arguments","length","undefined","literal","overlap","concat","flatten","obj","Array","isArray","map","slots","objects","Object","keys","key","item","charCodeAt","prior","v","index","_slots$mq$index","el","assign","_len","values","_key"],"mappings":"6FAAA,qGA+BMA,EAAKC,YAAU,CAAC,2BAA4B,8B,wEA2ErCC,EAAY,aAoDVC,UA1HqB,SAACC,GAAU,UACvCC,EAMD,GAyBL,OAxBA,UAAAD,EAAME,YAAN,mBAAYC,yBAAZ,mBAA+BC,aAA/B,SAAsCC,SAAQ,SAACC,GACzCA,EAAKC,KAAKC,YAAYC,SACxBR,EAAMS,KAAK,CACTC,MAAOL,EAAKC,KAAKC,YAAYG,MAC7BC,KAAMN,EAAKC,KAAKC,YAAYI,KAC5BC,QACE,qBAAKC,wBAAyB,CAAEC,OAAQT,EAAKC,KAAKS,WAEpDC,OAAQX,EAAKC,KAAKC,YAAYS,OAC9BC,KAAM,cAAcZ,EAAKC,KAAKY,OAAOC,UAK3CnB,EAAMoB,MAAK,SAACC,EAAGC,GACb,IAAMC,EAAQ,IAAIC,KAAKH,EAAEV,MAAMc,UACzBC,EAAQ,IAAIF,KAAKF,EAAEX,MAAMc,UAE/B,OAAIF,IAAUG,EACL,EAEFH,EAAQG,GAAS,EAAI,KAI5B,qBACEC,IAAKA,cACHhC,EAAG,CACDiC,QAAS,CAAC,YAAa,kBAI3B,cAAC,MAAD,CAAKC,KAAM9B,EAAME,KAAK4B,KAAKC,eAE3B,qBACEH,IAAG,IAsBL,cAAC,OAAD,CAAM3B,MAAOA,O,kCCvBJ,IA7EH,SAAe+B,GACzB,IAAIC,EAAOC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAC3EG,EAAUJ,EAAKI,QACfC,EAAUL,EAAKK,QAEf1C,EAAKyC,EAAUL,EAAc,CAAC,KAAKO,OAAOP,GAE9C,SAASQ,EAAQC,GACf,GAAmB,iBAARA,GAA2B,MAAPA,EAC7B,MAAO,GAGT,GAAIC,MAAMC,QAAQF,GAChB,OAAOA,EAAIG,IAAIJ,GAGjB,IAAIK,EAAQ,GACRC,EAAU,GACV9C,EAAQ,GA+CZ,OA9CA+C,OAAOC,KAAKP,GAAKpC,SAAQ,SAAU4C,GAGjC,IAAIC,EAAOT,EAAIQ,GAGf,IAFKP,MAAMC,QAAQO,IAASb,IAASa,EAAO,CAACA,KAExCb,GAAWK,MAAMC,QAAQO,KAAgC,KAAtBD,EAAIE,WAAW,GAAW,CAChE,IAAIC,OAAQ,EACZF,EAAK7C,SAAQ,SAAUgD,EAAGC,GAGxB,KAAIhB,GAAWc,IAAUC,IAIhB,MAALA,EAQJ,GAFAD,EAAQC,EAEM,IAAVC,GAAgBjB,EAEb,QAAyBD,IAArBS,EAAMjD,EAAG0D,IAAuB,CACzC,IAAIC,EAEJV,EAAMjD,EAAG0D,MAAWC,EAAkB,IAAoBN,GAAOI,EAAGE,QAEpEV,EAAMjD,EAAG0D,IAAQL,GAAOI,OANxBrD,EAAMiD,GAAOI,SASQ,iBAATH,EAChBJ,EAAQG,GAAOT,EAAQU,GAEvBlD,EAAMiD,GAAOC,KAIjBtD,EAAGS,SAAQ,SAAUmD,GACfX,EAAMW,KACRxD,EAAMwD,GAAMX,EAAMW,OAGtBT,OAAOU,OAAOzD,EAAO8C,GACd9C,EAGT,OAAO,WACL,IAAK,IAAI0D,EAAOxB,UAAUC,OAAQwB,EAASjB,MAAMgB,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC7ED,EAAOC,GAAQ1B,UAAU0B,GAG3B,OAAOD,EAAOf,IAAIJ","file":"component---src-blog-tsx-440bce9ea9a96fea0ff0.js","sourcesContent":["/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport {\n  Blog,\n  Theme,\n  ReactComponentsContext,\n  H1,\n  SEO,\n} from \"@robbie-cook/react-components\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport ArrowLeft from \"./ArrowLeft\";\nimport facepaint from \"facepaint\";\nimport date from \"date-and-time\";\n\n/**\n * Interface for Blog props\n */\ninterface BlogProps {\n  children?: any;\n  data?: any;\n}\n\ntype Props = {\n  site: {\n    siteMetadata: {\n      [key: string]: string;\n    };\n  };\n};\n\nconst mq = facepaint([\"@media(min-width: 700px)\", \"@media(min-width: 1120px)\"]);\n\n/**\n *  A Blog component.\n */\nconst MyBlog: React.FC<BlogProps> = (props) => {\n  const posts: Array<{\n    title: string;\n    date: string;\n    content: any;\n    author: string;\n    link: string;\n  }> = [];\n  props.data?.allMarkdownRemark?.edges?.forEach((edge) => {\n    if (edge.node.frontmatter.publish) {\n      posts.push({\n        title: edge.node.frontmatter.title,\n        date: edge.node.frontmatter.date,\n        content: (\n          <div dangerouslySetInnerHTML={{ __html: edge.node.excerpt }} />\n        ),\n        author: edge.node.frontmatter.author,\n        link: `/blog/posts${edge.node.fields.slug}`,\n      });\n    }\n  });\n\n  posts.sort((a, b) => {\n    const date1 = new Date(a.date).getTime();\n    const date2 = new Date(b.date).getTime();\n\n    if (date1 === date2) {\n      return 0;\n    }\n    return date1 > date2 ? -1 : 1;\n  });\n\n  return (\n    <div\n      css={css(\n        mq({\n          padding: [\"30px 20px\", \"30px 150px\"],\n        })\n      )}\n    >\n      <SEO site={props.data.site.siteMetadata as any} />\n\n      <div\n        css={css`\n          display: flex;\n          flex-wrap: wrap;\n          margin-top: 75px;\n        `}\n      >\n        {/* <ArrowLeft link=\"/\" /> */}\n        {/* <H1\n            css={css`\n              font-size: 4rem;\n              text-align: center;\n              margin-bottom: 90px !important;\n              margin-top: 0 !important;\n              margin-right: auto !important;\n              margin-left: auto !important;\n\n              transform: translate(-30px, 0);\n            `}\n          >\n            Blog\n          </H1> */}\n      </div>\n      <Blog posts={posts} />\n    </div>\n  );\n};\n\nexport const pageQuery = graphql`\n  query {\n    allSitePage {\n      edges {\n        node {\n          id\n          context {\n            slug\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        siteTitle\n        siteTitleAlt\n        siteHeadline\n        siteUrl\n        siteDescription\n        siteLanguage\n        siteImage\n        author\n      }\n    }\n    allMarkdownRemark {\n      edges {\n        node {\n          excerpt\n          id\n          html\n          headings(depth: h1) {\n            id\n          }\n          fileAbsolutePath\n          rawMarkdownBody\n          tableOfContents\n          timeToRead\n          frontmatter {\n            title\n            author\n            date\n            publish\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default MyBlog;\n","/* eslint-disable no-param-reassign */\nvar index = function index(breakpoints) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      literal = _ref.literal,\n      overlap = _ref.overlap;\n\n  var mq = literal ? breakpoints : ['&'].concat(breakpoints);\n\n  function flatten(obj) {\n    if (typeof obj !== 'object' || obj == null) {\n      return [];\n    }\n\n    if (Array.isArray(obj)) {\n      return obj.map(flatten);\n    }\n\n    var slots = {};\n    var objects = {};\n    var props = {};\n    Object.keys(obj).forEach(function (key) {\n      // Check if value is an array, but skip if it looks like a selector.\n      // key.indexOf('&') === 0\n      var item = obj[key];\n      if (!Array.isArray(item) && literal) item = [item];\n\n      if ((literal || Array.isArray(item)) && key.charCodeAt(0) !== 38) {\n        var prior = void 0;\n        item.forEach(function (v, index) {\n          // Optimize by removing duplicated media query entries\n          // when they are explicitly known to overlap.\n          if (overlap && prior === v) {\n            return;\n          }\n\n          if (v == null) {\n            // Do not create entries for undefined values as this will\n            // generate empty media media quries\n            return;\n          }\n\n          prior = v;\n\n          if (index === 0 && !literal) {\n            props[key] = v;\n          } else if (slots[mq[index]] === undefined) {\n            var _slots$mq$index;\n\n            slots[mq[index]] = (_slots$mq$index = {}, _slots$mq$index[key] = v, _slots$mq$index);\n          } else {\n            slots[mq[index]][key] = v;\n          }\n        });\n      } else if (typeof item === 'object') {\n        objects[key] = flatten(item);\n      } else {\n        props[key] = item;\n      }\n    }); // Ensure that all slots and then child objects are pushed to the end\n\n    mq.forEach(function (el) {\n      if (slots[el]) {\n        props[el] = slots[el];\n      }\n    });\n    Object.assign(props, objects);\n    return props;\n  }\n\n  return function () {\n    for (var _len = arguments.length, values = Array(_len), _key = 0; _key < _len; _key++) {\n      values[_key] = arguments[_key];\n    }\n\n    return values.map(flatten);\n  };\n};\n\nexport default index;"],"sourceRoot":""}